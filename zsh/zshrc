# SPEED UP
# just use "omz update"
DISABLE_AUTO_UPDATE=true
# URL auto-escaping (URLs get automatically quoted when pasted)
# Some enhanced copy/paste behaviors
# Automatic bracketed paste mode handling
DISABLE_MAGIC_FUNCTIONS=true
# Lost functionality: Security checks for completion system
# Oh-my-zsh normally verifies that completion directories have secure permissions
# Prevents potential security issues from world-writable completion directories
DISABLE_COMPFIX=true

# The completion system (compinit) is zsh’s built-in command completion - it’s what shows possible completions when you hit tab.
# Trick from https://scottspence.com/posts/speeding-up-my-zsh-shell
# Instead of rebuilding the completion cache every time, we only do it once a day:
autoload -Uz compinit
if [ "$(date +'%j')" != "$(stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)" ]; then
    compinit
else
    compinit -C
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
#if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
#fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=${HOME}/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
#ZSH_THEME="mitsuhiko"
#ZSH_THEME="powerlevel10k/powerlevel10k"
# Starship prompt used (see bottom)

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=${HOME}/.zsh-custom

# Custom vi-mode plugin
# c.f. https://github.com/jeffreytse/zsh-vi-mode (installed from AUR)
source /usr/share/zsh/plugins/zsh-vi-mode/zsh-vi-mode.plugin.zsh

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git-prompt fzf fzf-tab fast-syntax-highlighting zsh-autosuggestions history-substring-search colored-man-pages)
#plugins=(git-prompt vi-mode zsh-autosuggestions better-virtualenv)

source $ZSH/oh-my-zsh.sh

# User configuration

# Syntax highlighting
#source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# fzf
#[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# cht.sh tab completion
fpath+=("${HOME}/.zsh-custom/plugins")
#fpath+=("${HOME}/.zsh-custom/themes/pure")


# fnm node version manager
eval "$(fnm env --use-on-cd --shell zsh)"


#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/mfischer/.sdkman"
[[ -s "/home/mfischer/.sdkman/bin/sdkman-init.sh" ]] && source "/home/mfischer/.sdkman/bin/sdkman-init.sh"

#source /home/mfischer/.config/broot/launcher/bash/br

# For pyenv
# Using uv for now
#export PATH="$HOME/.pyenv/bin:$PATH"
#eval "$(pyenv init - --no-rehash zsh)"

# Starship prompt
eval "$(starship init zsh)"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
#[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export PATH="$HOME/.local/bin:$PATH"

source /home/mfischer/.config/broot/launcher/bash/br

# zoxide
eval "$(zoxide init zsh)"

# atuin shell history
#eval "$(atuin init zsh)"
# If atuin is installed, enable it.
# see GH issue: https://github.com/atuinsh/atuin/issues/1826
if command -v atuin &> /dev/null; then
    # Note: Since zsh-vi-mode lazy-loads keybinds, it will overwrite
    # Some of the keybinds set by atuin. The following creates a 'callback'
    # that loads atuin after zsh-vi-mode has applied all keymaps.
    function my_init() {
        eval "$(atuin init zsh --disable-up-arrow)"
    }
    zvm_after_init_commands+=(my_init)
fi

. "$HOME/.cargo/env"
